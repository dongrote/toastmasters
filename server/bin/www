#!/usr/bin/env node
require('dotenv').config();
/**
 * Module dependencies.
 */

const app = require('../app'),
  log = require('debug-logger')('tm:www'),
  http = require('http');

/**
 * Get port from environment and store in Express.
 */

const port = Number(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */

const httpServer = http.createServer(app);

/**
 * Event listener for HTTP server "error" event.
 */

const onError = error => {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      log.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      log.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
};

/**
 * Event listener for HTTP server "listening" event.
 */

const onListening = () => {
  const addr = httpServer.address(),
    bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
  log.info(`Listening on ${bind}`);
};

/**
 * Listen on provided port, on all network interfaces.
 */

httpServer.listen(port);
httpServer.on('error', onError);
httpServer.on('listening', onListening);
